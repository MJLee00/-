<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.passing.platform.dao.TestingMapper" >
  <resultMap id="BaseResultMap" type="com.passing.platform.domain.Testing" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="courseid" property="courseid" jdbcType="INTEGER" />
    <result column="endTime" property="endtime" jdbcType="VARCHAR" />
    <result column="testtitle" property="testtitle" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, courseid, endTime, testtitle, title, content
  </sql>

  <select id="selectAllCount" resultType="java.lang.Integer">
    select count(*) from testing ;
  </select>
  <select id="selectAllTesting" resultType="com.passing.platform.domain.Testing" parameterType="java.lang.Integer">
    select * from testing where courseid=#{2} limit #{0},#{1};
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from testing
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from testing
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.passing.platform.domain.Testing" >
    insert into testing (id, courseid, endTime, 
      testtitle, title, content
      )
    values (#{id,jdbcType=INTEGER}, #{courseid,jdbcType=INTEGER}, #{endtime,jdbcType=VARCHAR}, 
      #{testtitle,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.passing.platform.domain.Testing" >
    insert into testing
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseid != null" >
        courseid,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="testtitle != null" >
        testtitle,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseid != null" >
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="testtitle != null" >
        #{testtitle,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.passing.platform.domain.Testing" >
    update testing
    <set >
      <if test="courseid != null" >
        courseid = #{courseid,jdbcType=INTEGER},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="testtitle != null" >
        testtitle = #{testtitle,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.passing.platform.domain.Testing" >
    update testing
    set courseid = #{courseid,jdbcType=INTEGER},
      endTime = #{endtime,jdbcType=VARCHAR},
      testtitle = #{testtitle,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>